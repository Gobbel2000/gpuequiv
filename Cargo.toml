[package]
name = "gpuequiv"
version = "0.1.0"
authors = ["Gabriel Vogel"]
edition = "2021"
rust-version = "1.73"
description = "A GPU-accelerated implementation of an algorithm to find all equivalences of processes"
repository = "https://github.com/Gobbel2000/gpuequiv"
license = "MIT"
keywords = ["equivalence", "game-theory", "webgpu"]
categories = ["science"]
exclude = ["/graphgen/"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
wgpu = "0.19.3"
log = "0.4"
bytemuck = "1.14"
futures-intrusive = "0.5"
ndarray = "0.15"
regex-lite = "0.1"
disjoint-sets = "0.4"
# For faster hashsets and hashmaps
rustc-hash = "1.1"

serde = { version = "1.0", features = ["derive"], optional = true }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
console_error_panic_hook = "0.1"
console_log = "1.0"
wasm-bindgen-futures = "0.4"

[dev-dependencies]
serde_json = "1.0"
env_logger = "0.11"
pollster = { version = "0.3", features = ["macro"] }
# Benchmark framework
criterion = { version = "0.5", features = ["async"] }

[workspace]
members = [
    "run-wasm",
]

[[bench]]
name = "benchmark"
harness = false  # Use criterion instead of default bench harness

[[example]]
name = "json"
required-features = ["serde"]
